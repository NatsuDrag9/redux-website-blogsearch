[{"/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/index.js":"1","/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/App.js":"2","/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/app/store.js":"3","/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/features/userSlice.js":"4","/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/components/Home.js":"5","/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/components/Navbar.js":"6","/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/components/Blogs.js":"7","/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/components/SearchInput.js":"8"},{"size":276,"mtime":1612206731496,"results":"9","hashOfConfig":"10"},{"size":535,"mtime":1612386215715,"results":"11","hashOfConfig":"10"},{"size":180,"mtime":1612201739462,"results":"12","hashOfConfig":"10"},{"size":1226,"mtime":1612209151930,"results":"13","hashOfConfig":"10"},{"size":1855,"mtime":1612212656845,"results":"14","hashOfConfig":"10"},{"size":2795,"mtime":1612387903920,"results":"15","hashOfConfig":"10"},{"size":2084,"mtime":1612385316085,"results":"16","hashOfConfig":"10"},{"size":849,"mtime":1612384646729,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17l9hga",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/index.js",[],["38","39"],"/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/App.js",[],"/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/app/store.js",[],"/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/features/userSlice.js",[],"/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/components/Home.js",[],"/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/components/Navbar.js",["40","41"],"import {Avatar} from '@material-ui/core';\nimport React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { GoogleLogout } from 'react-google-login';\nimport { setSignedIn, selectSignedIn, selectUserData, setUserData, setInput } from '../features/userSlice';\nimport '../styles/Navbar.css';\n\nconst Navbar = () => {\n    const isSignedIn = useSelector(selectSignedIn);\n    // const [inputValue, setInputValue] = useState(\"tech\");\n    const userData = useSelector(selectUserData);\n    \n    const dispatch = useDispatch();\n    const logout = (response) => {\n        dispatch(setSignedIn(false));\n        dispatch(setUserData(null));\n    }\n\n    // const handleClick = (e) => {\n    //     e.preventDefault();\n    //     dispatch(setInput(inputValue));\n    // }\n\n    return (\n        <div className=\"navbar\">\n            <h1 className=\"navbar__header\">\n                Blogmania\n            </h1>\n            {/* {isSignedIn &&\n                (\n                    <div className=\"blog__search\">\n                        <input \n                            className=\"search\"\n                            placeholder=\"Search for a blog\"\n                            value={inputValue}\n                            onChange={(e) => {setInputValue(e.target.value)}}\n                        >\n                        </input>\n                        <button className=\"submit\" onClick={handleClick}>\n                            Search\n                        </button>\n                    </div>\n                )\n            } */}\n            {isSignedIn ?\n                (\n                    <div className=\"navbar__user__data\">\n                        <Avatar \n                            className=\"user\"\n                            src={userData?.imageUrl} \n                            alt={userData?.name}\n                        />\n                        <h1 className=\"singedIn\">{userData?.givenName}</h1>\n                        <GoogleLogout \n                            clientId=\"980174412224-iv4d38r5rc6bg9vl6fb0lsuh9pjvdsr4.apps.googleusercontent.com\"\n                            render={(renderProps) => (\n                                <button\n                                    onClick={renderProps.onClick}\n                                    disabled={renderProps.disabled}\n                                    className=\"logout__button\"\n                                >\n                                    Logout\n                                </button>\n                            )}\n                            onLogoutSuccess={logout}\n                        />\n                    </div>\n                ):\n                (\n                    <h1 className=\"notSignedIn\"></h1>\n                )\n            }\n        </div>\n    )\n}\n\nexport default Navbar\n","/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/components/Blogs.js",["42","43","44","45"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { selectUserInput, setBlogData } from '../features/userSlice';\nimport SearchInput from './SearchInput';\nimport '../styles/Blogs.css';\n\nconst Blogs = () => {\n    const searchInput = useSelector(selectUserInput);\n    \n    const API_TOKEN = 'afc5c630b163a435d74d886c50ac97ba';\n    const blog_url = `https://gnews.io/api/v4/search?q=${searchInput}&token=${API_TOKEN}`;\n    \n    const dispatch = useDispatch();\n    const [blogs, setBlogs] = useState({});\n\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        axios.get(blog_url)\n            .then((response) => {\n                dispatch(setBlogData(response.data))\n                setBlogs(response.data)\n                setLoading(false)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, [searchInput]);\n\n    return (\n        <div className=\"blog__page\">\n            <SearchInput />\n            <div className=\"blog__page__header\">Blogs</div>\n            {loading ? <h1 className=\"loading\">Loading...</h1> : \"\"}\n            <div className=\"blogs\">\n                {blogs?.articles?.map((blog) => (\n                    <a className=\"blog\" target=\"_blank\" href={blog.url}>\n                        <img src={blog.image}></img>\n                        <div>\n                            <h3 className=\"sourceName\">\n                                <span>{blog.source.name}</span>\n                                <p>{blog.publishedAt}</p>\n                            </h3>\n                            <h1>{blog.title}</h1>\n                            <p>{blog.description}</p>\n                        </div>\n                    </a>\n                ))}\n                {blogs?.totalArticles == 0 && (\n                    <h1 className=\"no__blogs\">\n                        No blogs available. Please search again.\n                    </h1>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Blogs;\n","/home/rohit/Desktop/Rohit/Personal/Partial_Work_and_Learning/Web Development/ReactJS/redux-website/src/components/SearchInput.js",[],["46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":68,"nodeType":"54","messageId":"55","endLine":5,"endColumn":76},{"ruleId":"56","severity":1,"message":"57","line":70,"column":21,"nodeType":"58","endLine":70,"endColumn":49},{"ruleId":"59","severity":1,"message":"60","line":29,"column":8,"nodeType":"61","endLine":29,"endColumn":21,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":38,"column":21,"nodeType":"58","endLine":38,"endColumn":73},{"ruleId":"65","severity":1,"message":"66","line":39,"column":25,"nodeType":"58","endLine":39,"endColumn":47},{"ruleId":"67","severity":1,"message":"68","line":50,"column":39,"nodeType":"69","messageId":"70","endLine":50,"endColumn":41},{"ruleId":"48","replacedBy":"71"},{"ruleId":"50","replacedBy":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'setInput' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'blog_url' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["75"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["73"],["74"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [blog_url, dispatch, searchInput]",{"range":"78","text":"79"},[956,969],"[blog_url, dispatch, searchInput]"]