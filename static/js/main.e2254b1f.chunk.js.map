{"version":3,"sources":["features/userSlice.js","app/store.js","components/Home.js","components/Navbar.js","components/SearchInput.js","components/Blogs.js","App.js","index.js"],"names":["userSlice","createSlice","name","initialState","isSignedIn","userData","searchInput","blogData","reducers","setSignedIn","state","action","payload","setUserData","setInput","setBlogData","actions","selectSignedIn","user","selectUserData","selectUserInput","configureStore","reducer","userReducer","Home","dispatch","useDispatch","login","response","profileObj","useSelector","className","style","display","clientId","render","renderProps","onClick","disabled","onSuccess","onFailure","cookiePolicy","Navbar","Avatar","src","imageUrl","alt","givenName","onLogoutSuccess","SearchInput","useState","inputValue","setInputValue","placeholder","value","onChange","e","target","preventDefault","Blogs","blog_url","blogs","setBlogs","loading","setLoading","useEffect","axios","get","then","data","catch","error","console","log","articles","map","blog","href","url","image","source","publishedAt","title","description","totalArticles","App","ReactDOM","store","document","querySelector"],"mappings":"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","file":"static/js/main.e2254b1f.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nconst userSlice = createSlice(\n    {\n        name: \"user\",\n        initialState: {\n            isSignedIn: false,\n            userData: null,\n            searchInput: \"tech\",\n            blogData: null\n        },\n        reducers: {\n            setSignedIn: (state, action) => {\n                state.isSignedIn = action.payload;\n            },\n            setUserData: (state, action) => {\n                state.userData = action.payload;\n            },\n            setInput: (state, action) => {\n                state.searchInput = action.payload;\n            },\n            setBlogData: (state, action) => {\n                state.blogData = action.payload;\n            }\n        }\n    }\n);\n\nexport const {\n    setSignedIn,\n    setUserData,\n    setInput,\n    setBlogData\n} = userSlice.actions;\n\n// user refers to the user's name and the rest of states are\n// that particular user's states\nexport const selectSignedIn = (state) => state.user.isSignedIn;\nexport const selectUserData = (state) => state.user.userData;\nexport const selectUserInput = (state) => state.user.searchInput;\nexport const selectBlogData = (state) => state.user.blogData;\n\nexport default userSlice.reducer;","import {configureStore} from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport default configureStore({\n    reducer:{\n        user: userReducer\n    }\n});","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport GoogleLogin from 'react-google-login';\nimport { selectSignedIn, setSignedIn, setUserData } from '../features/userSlice';\nimport '../styles/Home.css'\n\nconst Home = () => {\n    const dispatch = useDispatch();\n\n    const login = (response) => {\n        dispatch(setSignedIn(true));\n        dispatch(setUserData(response.profileObj));\n    }\n\n    const isSignedIn = useSelector(selectSignedIn);\n\n    return (\n        <div className=\"home__page\" style={{display: isSignedIn ? \"none\" : \"\"}}>\n            {!isSignedIn ?\n                (<div className=\"login__message\">\n                    <h1>A reader's favorite place!</h1>\n                    <p>\n                        We provide high quality online resource for reading\n                        blogs. Just sign up and start reading...\n                    </p>\n                    <GoogleLogin\n                        clientId=\"980174412224-iv4d38r5rc6bg9vl6fb0lsuh9pjvdsr4.apps.googleusercontent.com\"\n                        render={(renderProps) => (\n                            <button\n                                onClick={renderProps.onClick}\n                                disabled={renderProps.disabled}\n                                className=\"login__button\"\n                            >\n                                Login with Google\n                            </button>\n                        )}\n                        onSuccess={login}\n                        onFailure={login}\n                        isSignedIn={true}\n                        cookiePolicy={\"single_host_origin\"}\n                    >\n                    </GoogleLogin>\n                </div>)\n                :\n                (\n                    \"\"\n                )\n            }\n        </div>\n    )\n}\n\nexport default Home;","import {Avatar} from '@material-ui/core';\nimport React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { GoogleLogout } from 'react-google-login';\nimport { setSignedIn, selectSignedIn, selectUserData, setUserData, setInput } from '../features/userSlice';\nimport '../styles/Navbar.css';\n\nconst Navbar = () => {\n    const isSignedIn = useSelector(selectSignedIn);\n    // const [inputValue, setInputValue] = useState(\"tech\");\n    const userData = useSelector(selectUserData);\n    \n    const dispatch = useDispatch();\n    const logout = (response) => {\n        dispatch(setSignedIn(false));\n        dispatch(setUserData(null));\n    }\n\n    // const handleClick = (e) => {\n    //     e.preventDefault();\n    //     dispatch(setInput(inputValue));\n    // }\n\n    return (\n        <div className=\"navbar\">\n            <h1 className=\"navbar__header\">\n                Blogmania\n            </h1>\n            {/* {isSignedIn &&\n                (\n                    <div className=\"blog__search\">\n                        <input \n                            className=\"search\"\n                            placeholder=\"Search for a blog\"\n                            value={inputValue}\n                            onChange={(e) => {setInputValue(e.target.value)}}\n                        >\n                        </input>\n                        <button className=\"submit\" onClick={handleClick}>\n                            Search\n                        </button>\n                    </div>\n                )\n            } */}\n            {isSignedIn ?\n                (\n                    <div className=\"navbar__user__data\">\n                        <Avatar \n                            className=\"user\"\n                            src={userData?.imageUrl} \n                            alt={userData?.name}\n                        />\n                        <h1 className=\"singedIn\">{userData?.givenName}</h1>\n                        <GoogleLogout \n                            clientId=\"980174412224-iv4d38r5rc6bg9vl6fb0lsuh9pjvdsr4.apps.googleusercontent.com\"\n                            render={(renderProps) => (\n                                <button\n                                    onClick={renderProps.onClick}\n                                    disabled={renderProps.disabled}\n                                    className=\"logout__button\"\n                                >\n                                    Logout\n                                </button>\n                            )}\n                            onLogoutSuccess={logout}\n                        />\n                    </div>\n                ):\n                (\n                    <h1 className=\"notSignedIn\"></h1>\n                )\n            }\n        </div>\n    )\n}\n\nexport default Navbar\n","import React, {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport { setInput } from '../features/userSlice';\nimport '../styles/SearchInput.css';\n\n\nconst SearchInput = () => {\n    const [inputValue, setInputValue] = useState(\"tech\");\n\n    const dispatch = useDispatch();\n    const handleClick = (e) => {\n        e.preventDefault();\n        dispatch(setInput(inputValue));\n    }\n\n    return (\n        <div className=\"blog__search\">\n            <input \n                className=\"search\"\n                placeholder=\"Search for a blog\"\n                value={inputValue}\n                onChange={(e) => {setInputValue(e.target.value)}}\n            >\n            </input>\n            <button className=\"submit\" onClick={handleClick}>\n                Search\n            </button>\n        </div>\n    )\n}\n\nexport default SearchInput;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { selectUserInput, setBlogData } from '../features/userSlice';\nimport SearchInput from './SearchInput';\nimport '../styles/Blogs.css';\n\nconst Blogs = () => {\n    const searchInput = useSelector(selectUserInput);\n    \n    const API_TOKEN = 'afc5c630b163a435d74d886c50ac97ba';\n    const blog_url = `https://gnews.io/api/v4/search?q=${searchInput}&token=${API_TOKEN}`;\n    \n    const dispatch = useDispatch();\n    const [blogs, setBlogs] = useState({});\n\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        axios.get(blog_url)\n            .then((response) => {\n                dispatch(setBlogData(response.data))\n                setBlogs(response.data)\n                setLoading(false)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, [searchInput]);\n\n    return (\n        <div className=\"blog__page\">\n            <SearchInput />\n            <div className=\"blog__page__header\">Blogs</div>\n            {loading ? <h1 className=\"loading\">Loading...</h1> : \"\"}\n            <div className=\"blogs\">\n                {blogs?.articles?.map((blog) => (\n                    <a className=\"blog\" target=\"_blank\" href={blog.url}>\n                        <img src={blog.image}></img>\n                        <div>\n                            <h3 className=\"sourceName\">\n                                <span>{blog.source.name}</span>\n                                <p>{blog.publishedAt}</p>\n                            </h3>\n                            <h1>{blog.title}</h1>\n                            <p>{blog.description}</p>\n                        </div>\n                    </a>\n                ))}\n                {blogs?.totalArticles == 0 && (\n                    <h1 className=\"no__blogs\">\n                        No blogs available. Please search again.\n                    </h1>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Blogs;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport Home from './components/Home';\nimport Navbar from './components/Navbar';\nimport Blogs from './components/Blogs';\nimport './App.css';\nimport { selectSignedIn } from './features/userSlice';\n\nconst App = () => {\n    const isSignedIn = useSelector(selectSignedIn);\n    return (\n        <div className=\"app\">\n            <Navbar />\n            <Home />\n            {isSignedIn && \n                <Blogs />\n            }\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './app/store';\nimport App from './App';\n\nReactDOM.render (\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector(\"#root\")\n);"],"sourceRoot":""}